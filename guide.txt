อธิบายโค้ด
    -ในการทำงานของแต่ละ process ที่ถูกประมวลผลด้วย Scheduling Policy 
        ในที่นี้ เราจะทำแค่ 2 วิธี นั่นคือ  first come first serve กับ round robin 
            -และเพื่อดูผลการทำงานของ processes เราได้สร้าง function ขึ้นมา 3 function มีหน้าที่ดังนี้
                        -readProcessesFromFile  สำหรับการอ่านข้อมูลจากไฟล์ txt
                        -fcfs สำหรับการทำงานแบบ First Come First Serve 
                        -round robin  สำหรับการทำงานแบบ Round Robin

    รายละเอียดการทำงานของ แต่ละฟังก์ชัน 
        ฟังก์ชัน readProcessesFromFile(filename) 
            - รับพารามิเตอร์ file ซึ่งเป็นชื่อไฟล์ที่ต้องการอ่านข้อมูล
            - โดยใช้ fs.readFileSync(), โค้ดจะอ่านข้อมูลจากไฟล์และคืนค่าข้อมูลเป็นสตริงในรูปแบบของข้อความ (text)
            - ส่วนของโค้ดที่ตามมาจะทำการแยกสตริงเป็นบรรทัดด้วยเครื่องหมาย \n เพื่อเข้าถึงข้อมูลแต่ละบรรทัด
            - จากนั้นจะวนลูปผ่านlineที่อ่านเพื่อดึงข้อมูลแต่ละprocess
            - โค้ดจะแยกชื่อprocessและเวลาจากstringที่อ่าน และเก็บข้อมูลไว้ในรูปแบบของคู่อันดับ (array) [processName, instructionTime]
            - ข้อมูลแต่ละคู่อันดับจะถูกเก็บในอาร์เรย์ processes
            -ฟังก์ชั่นจะ return อาร์เรย์ processes ที่มีข้อมูลของprocessทั้งหมด    
        
        
        ฟังก์ชั่น fcfsScheduling(processes)
            - ฟังก์ชั่น fcfsScheduling รับพารามิเตอร์ processes ซึ่งเป็นอาร์เรย์ของข้อมูลการประมวลผลของprocess
            - ฟังก์ชั่นนี้ใช้เพื่อจัดตารางการทำงานของprocessโดยใช้วิธี First-Come-First-Serve (FCFS) Scheduling
            - ภายในฟังก์ชั่นจะมีตัวแปร currentTime เพื่อเก็บเวลาปัจจุบันที่เริ่มต้นที่ 0
            - จะมีตัวแปร responseTimes เพื่อเก็บเวลาที่ตอบสนองของแต่ละprocess
            - จะมีตัวแปร output เพื่อเก็บผลลัพธ์ที่จะเขียนลงในไฟล์
            - และวนลูปผ่านprocessทั้งหมดในอาร์เรย์ processes:
                - จะดึงชื่อ processและเวลาการประมวลผลจากคู่อันดับข้อมูล
                - response ของprocessจะถูกตั้งค่าเป็นเวลาปัจจุบัน (currentTime)
                - นับเวลาที่ใช้ในการประมวลผลprocessโดยเพิ่มเวลาการประมวลผลใน currentTime
                - นำผลลัพธ์ที่ได้เพิ่มลงในอาร์เรย์ output โดยใช้รูปแบบที่กำหนด
            - เมื่อการวนลูปเสร็จสิ้น โค้ดจะพยายามเขียนผลลัพธ์ลงในไฟล์ schedule_fcfs.txt 
            โดยใช้ fs.writeFileSync และพิมพ์ข้อความ "schedule_fcfs.txt was created!" 
            หรือแสดงข้อผิดพลาดในกรณีที่เกิดข้อผิดพลาดในการเขียนไฟล์    

